/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useRef} from 'react'
import { useGLTF } from '@react-three/drei'
import {useFrame} from "@react-three/fiber";


const Pyramid =(props) => {

    const ref = useRef()

    // Create a variable to track elapsed time
    let elapsedTime = 0

    useFrame((state, delta) => {
        if (ref.current) {
            // Increment elapsed time using delta (time between frames)
            elapsedTime += delta

            // Apply a sine wave for smooth breathing effect
            const amplitude = 0.1 // The range of movement
            const frequency = 0.5 // The speed of oscillation (Hz)
            ref.current.position.z = Math.sin(elapsedTime * frequency * Math.PI * 2) * amplitude
        }
    })


    const { nodes, materials } = useGLTF('/models/level-react-draco.glb')
    return (
        <mesh
            ref = {ref}
            {...props}
            castShadow
            receiveShadow
            geometry={nodes.Pyramid.geometry}
            material={materials.Pyramid}
        />
    )
}

useGLTF.preload('models/level-react-draco.glb')

export default Pyramid